{"remainingRequest":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\githubRepositories\\djangovue\\components\\vuedatepick-cmp.vue?vue&type=template&id=1050dc63&","dependencies":[{"path":"D:\\code\\githubRepositories\\djangovue\\components\\vuedatepick-cmp.vue","mtime":1637404980000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}