{"remainingRequest":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\githubRepositories\\djangovue\\components\\vuedatepick-cmp.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\code\\githubRepositories\\djangovue\\components\\vuedatepick-cmp.vue","mtime":1637404980000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["vuedatepick-cmp.vue"],"names":[],"mappingssfile":"vuedatepick-cmp.vue","sourceRoot":"../../components","sourcesContent":["<template>\r\n<div>\r\n  <div class=\"vdpComponent\" :class=\"{vdpWithInput: hasInputElement}\">\r\n        <slot\r\n            :open=\"open\"\r\n            :close=\"close\"\r\n            :toggle=\"toggle\"\r\n            :inputValue=\"inputValue\"\r\n            :processUserInput=\"processUserInput\"\r\n            :valueToInputFormat=\"valueToInputFormat\"\r\n        >\r\n            <input\r\n                v-if=\"hasInputElement\"\r\n                type=\"text\"\r\n                :class=\"input_class\"\r\n                :id=\"id\"\r\n                v-bind=\"inputAttributes\"\r\n                :readonly=\"isReadOnly\"\r\n                :value=\"inputValue\"\r\n                @input=\"editable && processUserInput($event.target.value)\"\r\n                @focus=\"editable && open()\"\r\n                @click=\"editable && open()\"\r\n            >\r\n            <button\r\n                v-if=\"editable && hasInputElement && inputValue\"\r\n                class=\"vdpClearInput\"\r\n                type=\"button\"\r\n                @click=\"clear\"\r\n            ></button>\r\n        </slot>\r\n        <transition name=\"vdp-toggle-calendar\">\r\n            <div\r\n                v-if=\"opened\"\r\n                class=\"vdpOuterWrap\"\r\n                ref=\"outerWrap\"\r\n                @click=\"closeViaOverlay\"\r\n                :class=\"[positionClass, {vdpFloating: hasInputElement}]\"\r\n            >\r\n                <div class=\"vdpInnerWrap\">\r\n                    <header class=\"vdpHeader\">\r\n                        <button\r\n                            class=\"vdpArrow vdpArrowPrev\"\r\n                            :title=\"prevMonthCaption\"\r\n                            type=\"button\"\r\n                            @click=\"incrementMonth(-1)\"\r\n                        >{{ prevMonthCaption }}</button>\r\n                        <button\r\n                            class=\"vdpArrow vdpArrowNext\"\r\n                            type=\"button\"\r\n                            :title=\"nextMonthCaption\"\r\n                            @click=\"incrementMonth(1)\"\r\n                        >{{ nextMonthCaption }}</button>\r\n                        <div class=\"vdpPeriodControls\">\r\n                            <div class=\"vdpPeriodControl\">\r\n                                <button :class=\"directionClass\" :key=\"currentPeriod.month\" type=\"button\">\r\n                                    {{ months[currentPeriod.month] }}\r\n                                </button>\r\n                                <select v-model=\"currentPeriod.month\">\r\n                                    <option v-for=\"(month, index) in months\" :value=\"index\" :key=\"month\">\r\n                                        {{ month }}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"vdpPeriodControl\">\r\n                                <button :class=\"directionClass\" :key=\"currentPeriod.year\" type=\"button\">\r\n                                    {{ currentPeriod.year }}\r\n                                </button>\r\n                                <select v-model=\"currentPeriod.year\">\r\n                                    <option v-for=\"year in yearRange\" :value=\"year\" :key=\"year\">\r\n                                        {{ year }}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </header>\r\n                    <table class=\"vdpTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"vdpHeadCell\" v-for=\"(weekday, weekdayIndex) in weekdaysSorted\" :key=\"weekdayIndex\">\r\n                                    <span class=\"vdpHeadCellContent\">{{weekday}}</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody\r\n                            :key=\"currentPeriod.year + '-' + currentPeriod.month\"\r\n                            :class=\"directionClass\"\r\n                        >\r\n                            <tr class=\"vdpRow\" v-for=\"(week, weekIndex) in currentPeriodDates\" :key=\"weekIndex\">\r\n                                <td\r\n                                    class=\"vdpCell\"\r\n                                    v-for=\"item in week\"\r\n                                    :class=\"{\r\n                                        selectable: editable && !item.disabled,\r\n                                        selected: item.selected,\r\n                                        disabled: item.disabled,\r\n                                        today: item.today,\r\n                                        outOfRange: item.outOfRange\r\n                                    }\"\r\n                                    :data-id=\"item.dateKey\"\r\n                                    :key=\"item.dateKey\"\r\n                                    @click=\"editable && selectDateItem(item)\"\r\n                                >\r\n                                    <div\r\n                                        class=\"vdpCellContent\"\r\n                                    >{{ item.date.getDate() }}</div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div v-if=\"pickTime && currentTime\" class=\"vdpTimeControls\">\r\n                        <span class=\"vdpTimeCaption\">{{ setTimeCaption }}</span>\r\n                        <div class=\"vdpTimeUnit\">\r\n                            <pre><span>{{ currentTime.hoursFormatted }}</span><br></pre>\r\n                            <input\r\n                                type=\"number\" pattern=\"\\d*\" class=\"vdpHoursInput\"\r\n                                @input.prevent=\"inputHours\"\r\n                                @focusin=\"onTimeInputFocus\"\r\n                                :disabled=\"!editable\"\r\n                                :value=\"currentTime.hoursFormatted\"\r\n                            >\r\n                        </div>\r\n                        <span v-if=\"pickMinutes\" class=\"vdpTimeSeparator\">:</span>\r\n                        <div v-if=\"pickMinutes\" class=\"vdpTimeUnit\">\r\n                            <pre><span>{{ currentTime.minutesFormatted }}</span><br></pre>\r\n                            <input\r\n                                v-if=\"pickMinutes\"\r\n                                type=\"number\" pattern=\"\\d*\" class=\"vdpMinutesInput\"\r\n                                @input=\"inputTime('setMinutes', $event)\"\r\n                                @focusin=\"onTimeInputFocus\"\r\n                                :disabled=\"!editable\"\r\n                                :value=\"currentTime.minutesFormatted\"\r\n                            >\r\n                        </div>\r\n                        <span v-if=\"pickSeconds\" class=\"vdpTimeSeparator\">:</span>\r\n                        <div v-if=\"pickSeconds\" class=\"vdpTimeUnit\">\r\n                            <pre><span>{{ currentTime.secondsFormatted }}</span><br></pre>\r\n                            <input\r\n                                v-if=\"pickSeconds\"\r\n                                type=\"number\" pattern=\"\\d*\" class=\"vdpSecondsInput\"\r\n                                @input=\"inputTime('setSeconds', $event)\"\r\n                                @focusin=\"onTimeInputFocus\"\r\n                                :disabled=\"!editable\"\r\n                                :value=\"currentTime.secondsFormatted\"\r\n                            >\r\n                        </div>\r\n                        <button\r\n                            v-if=\"use12HourClock\"\r\n                            type=\"button\" class=\"vdp12HourToggleBtn\"\r\n                            :disabled=\"!editable\"\r\n                            @click=\"set12HourClock(currentTime.isPM ? 'AM' : 'PM')\"\r\n                        >\r\n                            {{ currentTime.isPM ? 'PM' : 'AM' }}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  const formatRE = /,|\\.|-| |:|\\/|\\\\/;\r\nconst dayRE = /D+/;\r\nconst monthRE = /M+/;\r\nconst yearRE = /Y+/;\r\nconst hoursRE = /h+/i;\r\nconst minutesRE = /m+/;\r\nconst secondsRE = /s+/;\r\nconst AMPMClockRE = /A/;\r\n\r\n  export default {\r\n  name: 'vuedatepick',\r\n    props: {\r\n        id:{\r\n            type: String,\r\n            default: ''\r\n        },\r\n        input_class:{\r\n            type: String,\r\n            default: ''\r\n        },\r\n        value: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        format: {\r\n            type: String,\r\n            default: 'YYYY-MM-DD'\r\n        },\r\n        displayFormat: {\r\n            type: String\r\n        },\r\n        editable: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        hasInputElement: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        inputAttributes: {\r\n            type: Object\r\n        },\r\n        selectableYearRange: {\r\n            type: [Number, Object, Function],\r\n            default: 40\r\n        },\r\n        startPeriod: {\r\n            type: Object\r\n        },\r\n        parseDate: {\r\n            type: Function\r\n        },\r\n        formatDate: {\r\n            type: Function\r\n        },\r\n        pickTime: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        pickMinutes: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        pickSeconds: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        use12HourClock: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isDateDisabled: {\r\n            type: Function,\r\n            default: () => false\r\n        },\r\n        nextMonthCaption: {\r\n            type: String,\r\n            default: 'Next month'\r\n        },\r\n        prevMonthCaption: {\r\n            type: String,\r\n            default: 'Previous month'\r\n        },\r\n        setTimeCaption: {\r\n            type: String,\r\n            default: 'Set time:'\r\n        },\r\n        mobileBreakpointWidth: {\r\n            type: Number,\r\n            default: 500\r\n        },\r\n        weekdays: {\r\n            type: Array,\r\n            default: () => ([\r\n                'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'\r\n            ])\r\n        },\r\n        months: {\r\n            type: Array,\r\n            default: () => ([\r\n                'January', 'February', 'March', 'April',\r\n                'May', 'June', 'July', 'August',\r\n                'September', 'October', 'November', 'December'\r\n            ])\r\n        },\r\n        startWeekOnSunday: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            inputValue: this.valueToInputFormat(this.value),\r\n            direction: undefined,\r\n            positionClass: undefined,\r\n            opened: !this.hasInputElement,\r\n            currentPeriod: this.startPeriod || this.getPeriodFromValue(\r\n                this.value, this.format\r\n            )\r\n        };\r\n    },\r\n\r\n    computed: {\r\n\r\n        valueDate() {\r\n\r\n            const value = this.value;\r\n            const format = this.format;\r\n\r\n            return value\r\n                ? this.parseDateString(value, format)\r\n                : undefined\r\n            ;\r\n\r\n        },\r\n\r\n        isReadOnly() {\r\n            return !this.editable || (this.inputAttributes && this.inputAttributes.readonly);\r\n        },\r\n\r\n        isValidValue() {\r\n\r\n            const valueDate = this.valueDate;\r\n\r\n            return this.value ? Boolean(valueDate) : true;\r\n\r\n        },\r\n\r\n        currentPeriodDates() {\r\n\r\n            const {year, month} = this.currentPeriod;\r\n            const days = [];\r\n            const date = new Date(year, month, 1);\r\n            const today = new Date();\r\n            const offset = this.startWeekOnSunday ? 1 : 0;\r\n\r\n            // append prev month dates\r\n            const startDay = date.getDay() || 7;\r\n\r\n            if (startDay > (1 - offset)) {\r\n                for (let i = startDay - (2 - offset); i >= 0; i--) {\r\n\r\n                    const prevDate = new Date(date);\r\n                    prevDate.setDate(-i);\r\n                    days.push({outOfRange: true, date: prevDate});\r\n\r\n                }\r\n            }\r\n\r\n            while (date.getMonth() === month) {\r\n                days.push({date: new Date(date)});\r\n                date.setDate(date.getDate() + 1);\r\n            }\r\n\r\n            // append next month dates\r\n            const daysLeft = 7 - days.length % 7;\r\n\r\n            for (let i = 1; i <= daysLeft; i++) {\r\n\r\n                const nextDate = new Date(date);\r\n                nextDate.setDate(i);\r\n                days.push({outOfRange: true, date: nextDate});\r\n\r\n            }\r\n\r\n            // define day states\r\n            days.forEach(day => {\r\n                day.disabled = this.isDateDisabled(day.date);\r\n                day.today = areSameDates(day.date, today);\r\n                day.dateKey = [\r\n                    day.date.getFullYear(), day.date.getMonth() + 1, day.date.getDate()\r\n                ].join('-');\r\n                day.selected = this.valueDate ? areSameDates(day.date, this.valueDate) : false;\r\n            });\r\n\r\n            return chunkArray(days, 7);\r\n\r\n        },\r\n\r\n        yearRange() {\r\n\r\n            const currentYear = this.currentPeriod.year;\r\n            const userRange = this.selectableYearRange;\r\n            const userRangeType = typeof userRange;\r\n\r\n            let yearsRange = [];\r\n\r\n            if (userRangeType === 'number') {\r\n                yearsRange = range(\r\n                    currentYear - userRange,\r\n                    currentYear + userRange\r\n                );\r\n            } else if (userRangeType === 'object') {\r\n                yearsRange = range(\r\n                    userRange.from,\r\n                    userRange.to\r\n                );\r\n            } else if (userRangeType === 'function') {\r\n                yearsRange = userRange(this);\r\n            }\r\n\r\n            if (yearsRange.indexOf(currentYear) < 0) {\r\n                yearsRange.push(currentYear);\r\n                yearsRange = yearsRange.sort();\r\n            }\r\n\r\n            return yearsRange;\r\n\r\n        },\r\n\r\n        currentTime() {\r\n\r\n            const currentDate = this.valueDate;\r\n\r\n            if (!currentDate) {\r\n                return undefined;\r\n            }\r\n\r\n            const hours = currentDate.getHours();\r\n            const minutes = currentDate.getMinutes();\r\n            const seconds = currentDate.getSeconds();\r\n\r\n            return {\r\n                hours,\r\n                minutes,\r\n                seconds,\r\n                isPM: isPM(hours),\r\n                hoursFormatted: (this.use12HourClock ? to12HourClock(hours) : hours).toString(),\r\n                minutesFormatted: paddNum(minutes, 2),\r\n                secondsFormatted: paddNum(seconds, 2)\r\n            };\r\n\r\n        },\r\n\r\n        directionClass() {\r\n\r\n            return this.direction ? `vdp${this.direction}Direction` : undefined;\r\n\r\n        },\r\n\r\n        weekdaysSorted() {\r\n\r\n            if (this.startWeekOnSunday) {\r\n                const weekdays = this.weekdays.slice();\r\n                weekdays.unshift(weekdays.pop());\r\n                return weekdays;\r\n            } else {\r\n                return this.weekdays;\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n\r\n    watch: {\r\n\r\n        value(value) {\r\n\r\n            if (this.isValidValue) {\r\n                this.inputValue = this.valueToInputFormat(value);\r\n                this.currentPeriod = this.getPeriodFromValue(value, this.format);\r\n            }\r\n\r\n        },\r\n\r\n        currentPeriod(currentPeriod, oldPeriod) {\r\n\r\n            const currentDate = new Date(currentPeriod.year, currentPeriod.month).getTime();\r\n            const oldDate = new Date(oldPeriod.year, oldPeriod.month).getTime();\r\n\r\n            this.direction = currentDate !== oldDate\r\n                ? (currentDate > oldDate ? 'Next' : 'Prev')\r\n                : undefined\r\n            ;\r\n\r\n            if (currentDate !== oldDate) {\r\n                this.$emit('periodChange', {\r\n                    year: currentPeriod.year,\r\n                    month: currentPeriod.month\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n\r\n    beforeDestroy() {\r\n\r\n        this.removeCloseEvents();\r\n        this.teardownPosition();\r\n\r\n    },\r\n\r\n    methods: {\r\n\r\n        valueToInputFormat(value) {\r\n\r\n            return !this.displayFormat ? value : this.formatDateToString(\r\n                this.parseDateString(value, this.format), this.displayFormat\r\n            ) || value;\r\n\r\n        },\r\n\r\n        getPeriodFromValue(dateString, format) {\r\n\r\n            const date = this.parseDateString(dateString, format) || new Date();\r\n\r\n            return {month: date.getMonth(), year: date.getFullYear()};\r\n\r\n        },\r\n\r\n        parseDateString(dateString, dateFormat) {\r\n\r\n            return !dateString\r\n                ? undefined\r\n                : this.parseDate\r\n                    ? this.parseDate(dateString, dateFormat)\r\n                    : this.parseSimpleDateString(dateString, dateFormat)\r\n            ;\r\n\r\n        },\r\n\r\n        formatDateToString(date, dateFormat) {\r\n\r\n            return !date\r\n                ? ''\r\n                : this.formatDate\r\n                    ? this.formatDate(date, dateFormat)\r\n                    : this.formatSimpleDateToString(date, dateFormat)\r\n            ;\r\n\r\n        },\r\n\r\n        parseSimpleDateString(dateString, dateFormat) {\r\n\r\n            let day, month, year, hours, minutes, seconds;\r\n\r\n            const dateParts = dateString.split(formatRE);\r\n            const formatParts = dateFormat.split(formatRE);\r\n            const partsSize = formatParts.length;\r\n\r\n            for (let i = 0; i < partsSize; i++) {\r\n\r\n                if (formatParts[i].match(dayRE)) {\r\n                    day = parseInt(dateParts[i], 10);\r\n                } else if (formatParts[i].match(monthRE)) {\r\n                    month = parseInt(dateParts[i], 10);\r\n                } else if (formatParts[i].match(yearRE)) {\r\n                    year = parseInt(dateParts[i], 10);\r\n                } else if (formatParts[i].match(hoursRE)) {\r\n                    hours = parseInt(dateParts[i], 10);\r\n                } else if (formatParts[i].match(minutesRE)) {\r\n                    minutes = parseInt(dateParts[i], 10);\r\n                } else if (formatParts[i].match(secondsRE)) {\r\n                    seconds = parseInt(dateParts[i], 10);\r\n                }\r\n\r\n            }\r\n\r\n            const resolvedDate = new Date(\r\n                [paddNum(year, 4), paddNum(month, 2), paddNum(day, 2)].join('-')\r\n            );\r\n\r\n            if (isNaN(resolvedDate)) {\r\n                return undefined;\r\n            } else {\r\n\r\n                const date = new Date(year, month - 1, day);\r\n\r\n                [\r\n                    [year, 'setFullYear'],\r\n                    [hours, 'setHours'],\r\n                    [minutes, 'setMinutes'],\r\n                    [seconds, 'setSeconds']\r\n                ].forEach(([value, method]) => {\r\n                    typeof value !== 'undefined' && date[method](value);\r\n                });\r\n\r\n                return date;\r\n            }\r\n\r\n        },\r\n\r\n        formatSimpleDateToString(date, dateFormat) {\r\n\r\n            return dateFormat\r\n                .replace(yearRE, match => Number(date.getFullYear().toString().slice(-match.length)))\r\n                .replace(monthRE, match => paddNum(date.getMonth() + 1, match.length))\r\n                .replace(dayRE, match => paddNum(date.getDate(), match.length))\r\n                .replace(hoursRE, match => paddNum(\r\n                    AMPMClockRE.test(dateFormat) ? to12HourClock(date.getHours()) : date.getHours(),\r\n                    match.length\r\n                ))\r\n                .replace(minutesRE, match => paddNum(date.getMinutes(), match.length))\r\n                .replace(secondsRE, match => paddNum(date.getSeconds(), match.length))\r\n                // eslint-disable-next-line no-unused-vars\r\n                .replace(AMPMClockRE, match=> isPM(date.getHours()) ? 'PM' : 'AM')\r\n            ;\r\n\r\n        },\r\n\r\n        incrementMonth(increment = 1) {\r\n\r\n            const refDate = new Date(this.currentPeriod.year, this.currentPeriod.month);\r\n            const incrementDate = new Date(refDate.getFullYear(), refDate.getMonth() + increment);\r\n\r\n            this.currentPeriod = {\r\n                month: incrementDate.getMonth(),\r\n                year: incrementDate.getFullYear()\r\n            };\r\n\r\n        },\r\n\r\n        processUserInput(userText) {\r\n\r\n            const userDate = this.parseDateString(\r\n                userText, this.displayFormat || this.format\r\n            );\r\n\r\n            this.inputValue = userText;\r\n\r\n            this.$emit('input', userDate\r\n                ? this.formatDateToString(userDate, this.format)\r\n                : userText\r\n            );\r\n\r\n        },\r\n\r\n        toggle() {\r\n\r\n            return this.opened ? this.close() : this.open();\r\n\r\n        },\r\n\r\n        open() {\r\n\r\n            if (!this.opened) {\r\n                this.opened = true;\r\n                this.currentPeriod = this.startPeriod || this.getPeriodFromValue(\r\n                    this.value, this.format\r\n                );\r\n                this.addCloseEvents();\r\n                this.setupPosition();\r\n            }\r\n            this.direction = undefined;\r\n\r\n        },\r\n\r\n        close() {\r\n\r\n            if (this.opened) {\r\n                this.opened = false;\r\n                this.direction = undefined;\r\n                this.removeCloseEvents();\r\n                this.teardownPosition();\r\n            }\r\n\r\n        },\r\n\r\n        closeViaOverlay(e) {\r\n\r\n            if (this.hasInputElement && e.target === this.$refs.outerWrap) {\r\n                this.close();\r\n            }\r\n\r\n        },\r\n\r\n        addCloseEvents() {\r\n\r\n            if (!this.closeEventListener) {\r\n\r\n                this.closeEventListener = e => this.inspectCloseEvent(e);\r\n\r\n                ['click', 'keyup', 'focusin'].forEach(\r\n                    eventName => document.addEventListener(eventName, this.closeEventListener)\r\n                );\r\n\r\n            }\r\n\r\n        },\r\n\r\n        inspectCloseEvent(event) {\r\n\r\n            if (event.keyCode) {\r\n                event.keyCode === 27 && this.close();\r\n            } else if (!(event.target === this.$el) && !this.$el.contains(event.target)) {\r\n                this.close();\r\n            }\r\n\r\n        },\r\n\r\n        removeCloseEvents() {\r\n\r\n            if (this.closeEventListener) {\r\n\r\n                ['click', 'keyup', 'focusin'].forEach(\r\n                    eventName => document.removeEventListener(eventName, this.closeEventListener)\r\n                );\r\n\r\n                delete this.closeEventListener;\r\n\r\n            }\r\n\r\n        },\r\n\r\n        setupPosition() {\r\n\r\n            if (!this.positionEventListener) {\r\n                this.positionEventListener = () => this.positionFloater();\r\n                window.addEventListener('resize', this.positionEventListener);\r\n            }\r\n\r\n            this.positionFloater();\r\n\r\n        },\r\n\r\n        positionFloater() {\r\n\r\n            const inputRect = this.$el.getBoundingClientRect();\r\n\r\n            let verticalClass = 'vdpPositionTop';\r\n            let horizontalClass = 'vdpPositionLeft';\r\n\r\n            const calculate = () => {\r\n\r\n                const rect = this.$refs.outerWrap.getBoundingClientRect();\r\n                const floaterHeight = rect.height;\r\n                const floaterWidth = rect.width;\r\n\r\n                if (window.innerWidth > this.mobileBreakpointWidth) {\r\n\r\n                    // vertical\r\n                    if (\r\n                        (inputRect.top + inputRect.height + floaterHeight > window.innerHeight) &&\r\n                        (inputRect.top - floaterHeight > 0)\r\n                    ) {\r\n                        verticalClass = 'vdpPositionBottom';\r\n                    }\r\n\r\n                    // horizontal\r\n                    if (inputRect.left + floaterWidth > window.innerWidth) {\r\n                        horizontalClass = 'vdpPositionRight';\r\n                    }\r\n\r\n                    this.positionClass = ['vdpPositionReady', verticalClass, horizontalClass].join(' ');\r\n\r\n                } else {\r\n\r\n                    this.positionClass = 'vdpPositionFixed';\r\n\r\n                }\r\n\r\n            };\r\n\r\n            this.$refs.outerWrap ? calculate() : this.$nextTick(calculate);\r\n\r\n        },\r\n\r\n        teardownPosition() {\r\n\r\n            if (this.positionEventListener) {\r\n                this.positionClass = undefined;\r\n                window.removeEventListener('resize', this.positionEventListener);\r\n                delete this.positionEventListener;\r\n            }\r\n\r\n        },\r\n\r\n        clear() {\r\n\r\n            this.$emit('input', '');\r\n\r\n        },\r\n\r\n        selectDateItem(item) {\r\n\r\n            if (!item.disabled) {\r\n\r\n                const newDate = new Date(item.date);\r\n\r\n                if (this.currentTime) {\r\n                    newDate.setHours(this.currentTime.hours);\r\n                    newDate.setMinutes(this.currentTime.minutes);\r\n                    newDate.setSeconds(this.currentTime.seconds);\r\n                }\r\n\r\n                this.$emit('input', this.formatDateToString(newDate, this.format));\r\n\r\n                if (this.hasInputElement && !this.pickTime) {\r\n                    this.close();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        set12HourClock(value) {\r\n\r\n            const currentDate = new Date(this.valueDate);\r\n            const currentHours = currentDate.getHours();\r\n\r\n            currentDate.setHours(value === 'PM'\r\n                ? currentHours + 12\r\n                : currentHours - 12\r\n            );\r\n\r\n            this.$emit('input', this.formatDateToString(currentDate, this.format));\r\n        },\r\n\r\n        inputHours(event) {\r\n\r\n            const currentDate = new Date(this.valueDate);\r\n            const currentHours = currentDate.getHours();\r\n            const targetValue = parseInt(event.target.value, 10) || 0;\r\n            const minHours = this.use12HourClock ? 1 : 0;\r\n            const maxHours = this.use12HourClock ? 12 : 23;\r\n            const numValue = boundNumber(targetValue, minHours, maxHours);\r\n\r\n            currentDate.setHours(this.use12HourClock\r\n                ? to24HourClock(numValue, isPM(currentHours))\r\n                : numValue\r\n            );\r\n            event.target.value = paddNum(numValue, 1);\r\n            this.$emit('input', this.formatDateToString(currentDate, this.format));\r\n\r\n        },\r\n\r\n        inputTime(method, event) {\r\n\r\n            const currentDate = new Date(this.valueDate);\r\n            const targetValue = parseInt(event.target.value) || 0;\r\n            const numValue = boundNumber(targetValue, 0, 59);\r\n\r\n            event.target.value = paddNum(numValue, 2);\r\n            currentDate[method](numValue);\r\n\r\n            this.$emit('input', this.formatDateToString(currentDate, this.format));\r\n\r\n        },\r\n\r\n        onTimeInputFocus(event) {\r\n            event.target.select && event.target.select();\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nfunction paddNum(num, padsize) {\r\n\r\n    return typeof num !== 'undefined'\r\n        ? num.toString().length > padsize\r\n            ? num\r\n            : new Array(padsize - num.toString().length + 1).join('0') + num\r\n        : undefined\r\n    ;\r\n\r\n}\r\n\r\nfunction chunkArray(inputArray, chunkSize) {\r\n\r\n    const results = [];\r\n\r\n    while (inputArray.length) {\r\n        results.push(inputArray.splice(0, chunkSize));\r\n    }\r\n\r\n    return results;\r\n\r\n}\r\n\r\nfunction areSameDates(date1, date2) {\r\n\r\n    return (date1.getDate() === date2.getDate()) &&\r\n        (date1.getMonth() === date2.getMonth()) &&\r\n        (date1.getFullYear() === date2.getFullYear())\r\n    ;\r\n\r\n}\r\n\r\nfunction range(start, end) {\r\n\r\n    const results = [];\r\n\r\n    for (let i = start; i <= end; i++) {\r\n        results.push(i);\r\n    }\r\n    return results;\r\n\r\n}\r\n\r\nfunction to12HourClock(hours) {\r\n\r\n    const remainder = hours % 12;\r\n    return remainder === 0 ? 12 : remainder;\r\n\r\n}\r\n\r\nfunction to24HourClock(hours, PM) {\r\n\r\n    return PM\r\n        ? (hours === 12 ? hours : hours + 12)\r\n        : (hours === 12 ? 0 : hours)\r\n    ;\r\n\r\n}\r\n\r\nfunction isPM(hours) {\r\n\r\n    return hours >= 12;\r\n\r\n}\r\n\r\nfunction boundNumber(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n  $vdpColor: #7485c2 !default;\r\n\r\n@keyframes vdpSlideFromLeft {\r\n    from { opacity: 0; transform: translate3d(-0.5em,0,0); }\r\n    to { opacity: 1; transform: translate3d(0,0,0); }\r\n}\r\n\r\n@keyframes vdpSlideFromRight {\r\n    from { opacity: 0; transform: translate3d(0.5em,0,0); }\r\n    to { opacity: 1; transform: translate3d(0,0,0); }\r\n}\r\n\r\n@keyframes vdpToggleCalendar {\r\n    from { opacity: 0; transform: scale(0.5); }\r\n    to { opacity: 1; transform: scale(1); }\r\n}\r\n\r\n@keyframes vdpFadeCalendar {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n}\r\n\r\n.vdp-toggle-calendar-enter-active.vdpPositionReady {\r\n\r\n    transform-origin: top left;\r\n    animation: vdpToggleCalendar .2s;\r\n\r\n}\r\n\r\n.vdp-toggle-calendar-leave-active {\r\n\r\n    animation: vdpToggleCalendar .15s reverse;\r\n\r\n}\r\n\r\n.vdp-toggle-calendar-enter-active.vdpPositionFixed {\r\n\r\n    animation: vdpFadeCalendar .3s;\r\n\r\n}\r\n\r\n.vdp-toggle-calendar-leave-active.vdpPositionFixed {\r\n\r\n    animation: vdpFadeCalendar .3s reverse;\r\n\r\n}\r\n\r\n.vdpComponent {\r\n\r\n    position: relative; display: inline-block; font-size: 10px;\r\n    color: #303030;\r\n    /*font-family: Helvetica, Arial, sans-serif;*/\r\n\r\n}\r\n\r\n.vdpComponent.vdpWithInput > input {\r\n\r\n    padding-right: 30px;\r\n\r\n}\r\n\r\n.vdpClearInput {\r\n\r\n    font-size: 1em; position: absolute; top: 0; bottom: 0; right: 0;\r\n    width: 3em;\r\n\r\n}\r\n\r\n.vdpClearInput:before {\r\n\r\n    content: '×'; width: 1.4em; height: 1.4em; line-height: 1.1em; box-sizing: border-box;\r\n    position: absolute; left: 50%; top: 50%; margin: -0.7em 0 0 -0.7em;\r\n    color: rgba(0,0,0,0.3); border: 1px solid rgba(0,0,0,0.15); border-radius: 50%;\r\n    background-color: #fff;\r\n\r\n}\r\n\r\n.vdpClearInput:hover:before {\r\n    box-shadow: 0 0.2em 0.5em rgba(0,0,0,0.15);\r\n}\r\n\r\n.vdpOuterWrap.vdpFloating {\r\n\r\n    position: absolute; padding: 0.5em 0; z-index: 220;\r\n\r\n}\r\n\r\n.vdpOuterWrap.vdpPositionFixed {\r\n\r\n    position: fixed; left: 0; top: 0; bottom: 0; right: 0;\r\n    padding: 2em;  display: flex; justify-content: center; align-items: center;\r\n    background-color: rgba(0,0,0,0.3);\r\n\r\n}\r\n\r\n.vdpFloating .vdpInnerWrap {\r\n\r\n    max-width: 30em;\r\n\r\n}\r\n\r\n.vdpPositionFixed .vdpInnerWrap {\r\n\r\n    max-width: 30em; margin: 0 auto;\r\n    border: 0; animation: vdpToggleCalendar 0.3s;\r\n\r\n}\r\n\r\n.vdpFloating.vdpPositionTop { top: 100%; }\r\n.vdpFloating.vdpPositionBottom { bottom: 100%; }\r\n.vdpFloating.vdpPositionLeft { left: 0; }\r\n.vdpFloating.vdpPositionRight { right: 0; }\r\n\r\n.vdpPositionTop.vdpPositionLeft { transform-origin: top left; }\r\n.vdpPositionTop.vdpPositionRight { transform-origin: top right; }\r\n.vdpPositionBottom.vdpPositionLeft { transform-origin: bottom left; }\r\n.vdpPositionBottom.vdpPositionRight { transform-origin: bottom right; }\r\n\r\n.vdpInnerWrap {\r\n\r\n    overflow: hidden; min-width: 28em; box-sizing: border-box; padding: 1em;\r\n    background: #fff; box-shadow: 0 0.2em 1.5em rgba(0,0,0,0.06);\r\n    border-radius: 0.5em; border: 1px solid rgba(0,0,0,0.15);\r\n\r\n}\r\n\r\n.vdpHeader {\r\n\r\n    position: relative; padding: 0 1em 2.5em; margin: -1em -1em -2.5em;\r\n    text-align: center; background: #f5f5f5;\r\n\r\n}\r\n\r\n.vdpClearInput,\r\n.vdpArrow,\r\n.vdpPeriodControl > button,\r\n.vdp12HourToggleBtn {\r\n\r\n     margin:0; padding: 0; border: 0; cursor: pointer; background: none;\r\n\r\n}\r\n\r\n.vdpArrow::-moz-focus-inner,\r\n.vdpClearInput::-moz-focus-inner,\r\n.vdpPeriodControl::-moz-focus-inner,\r\n.vdp12HourToggleBtn::-moz-focus-inner {\r\n\r\n    padding: 0; border: 0;\r\n\r\n}\r\n\r\n.vdpArrow {\r\n\r\n    font-size: 1em; width: 5em; text-indent: -999em; overflow: hidden;\r\n    position: absolute; top: 0; bottom: 2.5em; text-align: left;\r\n\r\n}\r\n\r\n.vdpArrow:before {\r\n\r\n    content: ''; width: 2.2em; height: 2.2em;\r\n    position: absolute; left: 50%; top: 50%; margin: -1.1em 0 0 -1.1em;\r\n    border-radius: 100%; transition: background-color 0.2s;\r\n\r\n}\r\n\r\n.vdpArrow:hover,\r\n.vdpArrow:focus,\r\n.vdpArrow:active {\r\n    outline: 0;\r\n}\r\n\r\n.vdpArrow:hover:before,\r\n.vdpArrow:focus:before {\r\n\r\n    background-color: rgba(0,0,0,0.03);\r\n\r\n}\r\n\r\n.vdpArrow:active:before {\r\n\r\n    background-color: rgba(0,0,0,0.07);\r\n\r\n}\r\n\r\n.vdpArrowNext:before {\r\n\r\n    margin-left: -1.4em;\r\n\r\n}\r\n\r\n.vdpArrow:after {\r\n\r\n    content: ''; position: absolute; left: 50%; top: 50%;\r\n    margin-top: -0.5em; width: 0; height: 0;\r\n    border: 0.5em solid transparent;\r\n\r\n}\r\n\r\n.vdpArrowPrev {\r\n\r\n    left: -0.3em;\r\n\r\n}\r\n\r\n.vdpArrowPrev:after {\r\n\r\n    margin-left: -0.8em;\r\n    border-right-color: $vdpColor;\r\n\r\n}\r\n\r\n.vdpArrowNext {\r\n\r\n    right: -0.6em;\r\n\r\n}\r\n\r\n.vdpArrowNext:after {\r\n\r\n    margin-left: -0.5em;\r\n    border-left-color: $vdpColor;\r\n\r\n}\r\n\r\n.vdpPeriodControl {\r\n\r\n    display: inline-block; position: relative;\r\n\r\n}\r\n\r\n.vdpPeriodControl > button {\r\n\r\n    font-size: 1.5em; padding: 1em 0.4em; display: inline-block;\r\n\r\n}\r\n\r\n.vdpPeriodControl > select {\r\n\r\n    position: absolute; left: 0; top: 0; width: 100%; height: 100%;\r\n    cursor: pointer; opacity: 0; font-size: 1.6em;\r\n    -webkit-appearance: none;\r\n\r\n}\r\n\r\n.vdpTable {\r\n\r\n    width: 100%; table-layout: fixed; position: relative; z-index: 5;\r\n\r\n}\r\n\r\n.vdpNextDirection {\r\n\r\n    animation: vdpSlideFromRight 0.5s;\r\n\r\n}\r\n\r\n.vdpPrevDirection {\r\n\r\n    animation: vdpSlideFromLeft 0.5s;\r\n\r\n}\r\n\r\n.vdpCell, .vdpHeadCell {\r\n\r\n    text-align: center; box-sizing: border-box;\r\n\r\n}\r\n\r\n.vdpCell {\r\n\r\n    padding: 0.5em 0;\r\n\r\n}\r\n\r\n.vdpHeadCell {\r\n\r\n    padding: 0.3em 0.5em 1.8em;\r\n\r\n}\r\n\r\n.vdpHeadCellContent {\r\n\r\n    font-size: 1.3em; font-weight: normal;\r\n    color: #848484;\r\n\r\n}\r\n\r\n.vdpCellContent {\r\n\r\n    font-size: 1.4em; display: block; margin: 0 auto;\r\n    width: 1.857em; line-height: 1.857em;\r\n    text-align: center; border-radius: 100%;\r\n    transition: background 0.1s, color 0.1s;\r\n\r\n}\r\n\r\n.vdpCell.outOfRange {\r\n\r\n    color: #c7c7c7;\r\n\r\n}\r\n\r\n.vdpCell.today {\r\n\r\n    color: $vdpColor;\r\n\r\n}\r\n\r\n.vdpCell.selected .vdpCellContent {\r\n\r\n    color: #fff; background: $vdpColor;\r\n\r\n}\r\n\r\n@media (hover: hover) {\r\n\r\n    .vdpCell.selectable:hover .vdpCellContent {\r\n\r\n        color: #fff; background: $vdpColor;\r\n\r\n    }\r\n\r\n}\r\n\r\n.vdpCell.selectable {\r\n\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.vdpCell.disabled {\r\n\r\n    opacity: 0.5;\r\n\r\n}\r\n\r\n.vdpTimeControls {\r\n\r\n    padding: 1.2em 2em; position: relative; margin: 1em -1em -1em;\r\n    text-align: center;\r\n    background: #f5f5f5;\r\n    /*border-top: 1px solid rgba(0,0,0,0.15);*/\r\n\r\n}\r\n\r\n.vdpTimeUnit {\r\n\r\n    display: inline-block; position: relative; vertical-align: middle;\r\n\r\n}\r\n\r\n.vdpTimeUnit > pre,\r\n.vdpTimeUnit > input {\r\n\r\n    font-size: 1.7em; line-height: 1.3; padding: 0.1em 0.1em;\r\n    word-wrap: break-word; white-space: pre-wrap;\r\n    resize: none; margin: 0; box-sizing: border-box;\r\n    color: #000; border: 0; border-bottom: 1px solid transparent;\r\n    text-align: center;\r\n\r\n}\r\n\r\n.vdpTimeUnit > pre {\r\n\r\n    visibility: hidden; font-family: inherit;\r\n\r\n}\r\n\r\n.vdpTimeUnit > input {\r\n\r\n    position: absolute; top: 0; left: 0; overflow: hidden;\r\n    height: 100%; width: 100%; outline: none; padding: 0;\r\n    appearance: none; border-radius: 0; background: transparent;\r\n\r\n    -webkit-appearance: textfield; -moz-appearance: textfield; appearance: textfield;\r\n\r\n    &::selection {\r\n        background-color: rgba($vdpColor, 0.15);\r\n    }\r\n\r\n}\r\n\r\n.vdpTimeUnit > input:hover,\r\n.vdpTimeUnit > input:focus {\r\n\r\n    border-bottom-color: $vdpColor;\r\n\r\n}\r\n\r\n.vdpTimeUnit > input:disabled {\r\n\r\n    border-bottom-color: transparent;\r\n\r\n}\r\n\r\n.vdpTimeUnit > input::-webkit-inner-spin-button,\r\n.vdpTimeUnit > input::-webkit-outer-spin-button {\r\n    margin: 0;\r\n    -webkit-appearance: none;\r\n}\r\n\r\n.vdpTimeSeparator, .vdpTimeCaption {\r\n\r\n    display: inline-block; vertical-align: middle; font-size: 1.3em;\r\n    color: #848484;\r\n\r\n}\r\n\r\n.vdpTimeCaption {\r\n\r\n    margin-right: 0.5em;\r\n\r\n}\r\n\r\n.vdp12HourToggleBtn {\r\n\r\n    display: inline-block; vertical-align: middle;\r\n    font-size: 1.3em; padding: 0 0.4em;\r\n    color: #303030;\r\n\r\n}\r\n\r\n.vdp12HourToggleBtn:hover,\r\n.vdp12HourToggleBtn:focus {\r\n\r\n    color: $vdpColor; outline: 0;\r\n\r\n}\r\n\r\n.vdp12HourToggleBtn:disabled {\r\n\r\n    color: #303030;\r\n\r\n}\r\n</style>"]}]}