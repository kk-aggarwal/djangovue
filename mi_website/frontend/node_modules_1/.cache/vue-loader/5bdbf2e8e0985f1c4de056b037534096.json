{"remainingRequest":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\githubRepositories\\djangovue\\components\\ktable-cmp.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\code\\githubRepositories\\djangovue\\components\\ktable-cmp.vue","mtime":1637404980000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mi_website\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICAgIHQ6aG92ZXJ7CiAgICAgICAgYmFja2dyb3VuZDpyZWQ7CiAgICB9CiAgICAua3RhYmxlLWV4cGFuZHsKICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpkYXJrZ3JheTsKICAgICAgICB3aWR0aDozMHB4OwogICAgfQogICAgLmt0YWJsZS1leHBhbmQ6aG92ZXJ7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjojZmYwMDAwCgogICAgfQogICAgCiAgICAuYWN0aXZlR3sKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiNmZjAwMDAKICAgIH0KICAgIC5kZXRhaWxyb3cgLnRkZGV0YWlscm93OmVtcHR5ewogICAgICAgIGRpc3BsYXk6bm9uZTsKCiAgICB9CiAgICAjZGV0YWlscm93ewogICAgICAgIHBhZGRpbmctbGVmdDogNDBweDsKICAgIH0KICAgIC50YWJsZSB0Ym9keSB0ciB0ZC5oaWdobGlnaHQgewogIGJhY2tncm91bmQtY29sb3I6ICMxMTdhOGI7Cn0KW3YtY2xvYWtdewogICAgZGlzcGxheTpub25lOwp9CgoKCg=="},{"version":3,"sources":["ktable-cmp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ktable-cmp.vue","sourceRoot":"../../components","sourcesContent":["\r\n<template>\r\n    <div v-cloak class='container' >\r\n    \r\n        <div class=\"row  bg-primar\">\r\n            <div class=\"col-sm-12 bg-primar\">\r\n            <div v-if=\"(caption=='')?false:true\" class=\"row bg-secondar\">\r\n                <span  class=\"col-md-11 \" style=\"float:left;background-colo:lightblue;text-align:center\">{{caption}}</span>\r\n            </div>\r\n            <div  v-if=\"tableparticulars&&displaytableparticulars\" class=\"row bg-dange\">\r\n                <div class=\"form-inline\">\r\n                    <div class=\"col-sm-12 form-group \">\r\n                        <template v-for=\"field,index in Object.keys(tableparticulars)\">\r\n                            <label class=\"col-sm-2 col-form-label \" :for=\"field\" :key=\"'2'+index\" v-text=\"field+':'\">:</label> \r\n                            <input  type=\"text\" rows=\"rows(field) \" class=\"col-sm-2 form-control bg-inf\" :id=\"field\" :value=\"tableparticulars[field]\" disabled :key=\"'i'+index\">\r\n                                \r\n                        </template>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n            </div>\r\n\r\n            <!--\r\n                <div  v-if=\"tableparticulars&&displaytableparticulars\" >\r\n\r\n                            <div class=\"card-columns\">\r\n                            <template v-for=\"field,index in Object.keys(tableparticulars)\">\r\n                                <div class=\"card \">\r\n                                    <div class=\"card-body\">\r\n                                    <div class=\"card-title\">\r\n                                        <label >[[field]]:</label>\r\n                                    </div>\r\n                                        <p class=\"card-text\" v-text=\"tableparticulars[field]\" ></p>\r\n                                    </div>\r\n                                </div>\r\n                            </template>\r\n                            </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                -->\r\n            <div class=\"row bg-warnin\" >\r\n                <div v-if=\"useActionButton&&urlcreate\"  class=\" col-md-2 d-inline-block \">\r\n                    <button  style=\"padding-to:20px\" class=\"btn btn-primary btn-sm\" @click=\"addItem\"> <slot name=\"addtext\">add </slot></button>\r\n                </div>\r\n                <div  v-if=\"groupinginforequired\" class=\" col-md-2 d-inline-block \">\r\n                    <button  style=\"padding-to:20px\" class=\"btn btn-primary btn-sm\" @click=\"filterdata\"> {{groupcaption}}</button>\r\n                </div>\r\n                <div  v-if=\"softbutton1\" class=\" col-md-2 d-inline-block \">\r\n                    <button  style=\"padding-to:20px\" class=\"btn btn-primary btn-sm\" @click=\"softbutton_clicked(1)\"> {{title_softbutton1}}</button>\r\n                </div>\r\n                <div  v-if=\"softbutton2\" class=\" col-md-2 d-inline-block \">\r\n                    <button  style=\"padding-to:20px\" class=\"btn btn-primary btn-sm\" click=\"softbutton2_click\">  {{title_softbutton1}}</button>\r\n                </div>\r\n\r\n                    <!--\r\n                    <div v-if=\"useActionButton&&urlcreate\"  class=\" col-md-1 d-inline-block\">\r\n                        <component :is=\"buttoncomponent\" ></component>\r\n                    </div>\r\n                    -->\r\n            </div> \r\n             <div class=\"row bg-info\" >    \r\n                <div v-if=\"tablesearchable&&tableData.length>0\" class=\"offset-8  d-inline-block\" >\r\n                    <span class=\"  input-group\">\r\n                        <label  class=\"  col-form-label\" for=\"field\">Field</label>\r\n                        <select   class=\"col-md-3 form-control\" id=\"searchfield\" v-model=\"searchfield\">\r\n                            <template v-for=\"field,index in formFields\" >\r\n                                <option :key=\"index\" v-text=\"field\"></option>\r\n                            </template>\r\n                        </select>\r\n                        <label  class=\" col-form-label\" for=\"search\">search</label>\r\n                        <input  type=\"text\" class=\"col-md-3 form-control\" id=\"searchtext\" @input=\"searchtext($event)\">\r\n                    </span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <!--<div class=\"col-md-4 offset-md-4\">[[caption]]</div>-->\r\n            <div class=\"row bg-inf\" v-if=\"groupdatashow\" v-html='groupdata'></div>\r\n            <div v-if=\"!groupdatashow\" class=\"row bg-inf\">\r\n                <table class=\"   table   table-striped table-sm \" style=\"margin-bottom:5px;margin-top:5px\">\r\n                    <thead v-if=\"headervisible\">\r\n                        <tr>\r\n                            <th v-if=\"showdetailrow\"></th>\r\n                            <th v-if=\"checkboxes&&(tableData.length==0?false:true)\"><input type=\"checkbox\" @click=\"selectall($event)\"></th>\r\n                            <th v-if=\"useserialnos&&(tableData.length==0?false:true)\">#</th>\r\n                            <template v-for=\"field,index in formFields\">\r\n                                <th v-if=\"width[field]==='0%'?false:true\"  @click.stop=\"onColumnHeaderClicked(field, $event)\"\r\n                                    :key=\"index\"\r\n                                    :id=\"'_' + field\"\r\n                                    :style=\"{'text-align':align[field],'width':width[field]}\"\r\n                                    v-html=\"renderTitle(field)\">\r\n\r\n                                </th>\r\n\r\n                            </template>\r\n                            <th v-if=\"useActionButton&&(tableData.length==0?false:true)\" :style=\"{width:useActionButton?'120px':'0px'}\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        <template  v-for=\"(item, itemindex) in tableData\">\r\n                            <tr item-index=\"itemIndex\"\r\n                                :key=\"'r'+itemindex\"\r\n                                :style=\"{'background-color':(item['rowcolor']=='default'?rowcolor:item['rowcolor'])}\"\r\n                                :class=\"{'active':isActive}\"\r\n                                @click.stop=\"rowitemclicked(item,itemindex,$event)\"\r\n                                dblclick=\"onRowDoubleClicked(item, itemindex, $event)\"\r\n                                mouseover=\"onMouseOver(item, itemIndex, $event)\"\r\n                            >\r\n                                <td  v-if=\"tableexpandable\"></td>\r\n                                <td  v-if=\"showdetailrow&&!tableexpandable\" class=\"ktable-expand\" clas=\"{'highlight': (itemindex == selectedRow)}\"  @click.stop=\"showdetailrow ?onRowClicked(item,itemindex,$event):''\">\r\n                                    \r\n                                        <a  href=\"javascript:void(0);\" style=\"display:block; \"><chevronright width=\"20\" v-if=\"d[itemindex]==''?false:true\"></chevronright><chevrondown width=\"20\" v-else></chevrondown></a>\r\n                                    \r\n                                </td>\r\n                                <td v-if=\"checkboxes\" @click.stop ><input type=\"checkbox\" @click=\"rowselected($event,itemindex)\" :checked=\"selectedrows.indexOf(itemindex)>-1\"></td>\r\n                                <td v-if=\"useserialnos\" :class=\"{'highlight': (itemindex == selectedRow)}\" style=\"width:20px\">{{itemindex+1}} </td>\r\n                                <template v-for=\"(field, index) in formFields\">\r\n                                    <td v-if=\"width[field]==='0%'?false:true\"\r\n                                        :key=\"'r'+itemindex+'c'+index\"\r\n                                        :class=\"{'highlight': (itemindex == selectedRow)}\"\r\n                                        :style=\"{'text-align':align[field],'color':(item['fieldcolor'][field]=='default'?'black':item['fieldcolor'][field]),'width':width[field]}\"\r\n                                        html=\"renderNormalField(field, item)\"\r\n                                        click=\"onCellClicked(item, itemIndex, field, $event)\"\r\n                                        dblclick=\"onCellDoubleClicked(item, itemIndex, field, $event)\"\r\n                                        contextmenu=\"onCellRightClicked(item, itemIndex, field, $event)\"\r\n                                    >\r\n                                        <slot :name=\"field\" :item=\"item\" :itemindex=\"itemindex\" >\r\n                                            <div :style=\"duplicatefieldshidden?fields_group.indexOf(field)>-1?(ifprevioussame(field,item,itemindex)&&!(typeof item[field]=='boolean')?{'visibility': 'hidden'}:{'visibility':'visible'}):{'visibility':'visible'}:{'visibility':'visible'}\">\r\n                                                <div @click.stop=\"rowitemclicked(item,itemindex,$event)\" v-html=\"renderNormalField(field, item,itemindex)\"></div>\r\n                                            </div>\r\n                                        </slot>\r\n                                    </td>\r\n                                </template>\r\n                                <td v-if=\"useActionButton\" style=\"background-color:lightblue;\" :style=\"{width:useActionButton?'120px':'0px'}\">\r\n                                    <span class=\"align-self-center\" v-if=\"useActionButton&&(geturledit(item)==''?false:true)\" >\r\n                                        <button class=\"btn bg-transparent  btn-sm\" @click.stop=\"editItem(item,index,$event)\"><slot name=\"edittext\"><b-icon icon=\"pencil-square\"></b-icon></slot></button>\r\n                                    </span>\r\n                                    <span class=\"align-self-center\" v-if=\"useActionButton&&(geturldelete(item)==''?false:true)\">\r\n                                        <button class=\"btn bg-transparent  btn-sm\" @click.stop=\"delItem(item,index,$event)\"><slot name=\"deletetext\"><b-icon icon=\"trash\"></b-icon></slot></button>\r\n                                    </span>\r\n                                    <span>\r\n                                        <slot name=\"printaction\" :item=\"item\" v-if=\"useprintbutton\">\r\n                                            <button class=\"btn bg-transparent btn-default btn-sm\" @click.stop=\"printItem(item,index,$event)\"><slot name=\"printtext\"><b-icon icon=\"printer\"></b-icon></slot></button>\r\n                                        </slot>\r\n                                    </span>\r\n                                    <span>\r\n                                        <slot name=\"extraactionbuttons\" :item=\"item\" >\r\n\r\n                                        </slot>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n\r\n\r\n\r\n                            <template v-if=\"showdetailrow\">\r\n                                <transition name=\"detailRowTransition\" :key=\"'t'+itemindex\">\r\n                                    <tr class=\"detailrow\"\r\n                                        :ref=\"'dr'+itemindex\"\r\n                                        click=\"onDetailRowClick(item, itemIndex, $event)\"\r\n                                        :style=\"{display:d[itemindex]}\"\r\n                                        style=\"backgroun-color:yellow\"\r\n                                    >\r\n                                        <td class=\"tddetailrow\" ></td>\r\n                                        <td id=\"detailrow\" class=\"tddetailrow\" :colspan=\"countVisibleFields()+3\" style=\"background-colo:yellow\">\r\n                                            <slot name=\"detailrow\" :item=\"item\" :index=\"itemindex\">\r\n\r\n                                            </slot>\r\n                                        </td>\r\n                                    </tr>\r\n                                </transition>\r\n                            </template>\r\n                        </template>\r\n                        <template v-if=\"summaryrow&&tableData.length>0\" class=\"summaryrow\">\r\n                            <tr class=\"bg-secondary\">\r\n                                <td  v-if=\"showdetailrow&&tableData.length>0\"></td>\r\n                                <td v-if=\"useserialnos&&tableData.length>0\"></td>\r\n                                <template  v-for=\"(field, index) in formFields\">\r\n                                    <td v-text=\"summary[field]\" :style=\"{'text-align':align[field]}\" :key=\"index\"></td>\r\n                                </template>\r\n                            </tr>\r\n                            <tr class=\"bg-secondary\">\r\n                                <td  v-if=\"showdetailrow&&tableData.length>0\"></td>\r\n                                <td v-if=\"useserialnos&&tableData.length>0\"></td>\r\n                                <template  v-for=\"(field, index) in formFields\">\r\n                                    <td v-text=\"summaryinfo[field]\" :style=\"{'text-align':align[field]}\" :key=\"index\"></td>\r\n                                </template>\r\n                            </tr>\r\n                        </template>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div v-if=\"!tableData.length==0&&exportto\" class=\"row bg-inf\">\r\n                <div  class=\"col-md-1 offset-10\" style=\"align:left;\">\r\n                    <button  style=\"padding-to:20px\" class=\"btn btn-secondary btn-sm\" @click=\"ExportData\">To Excel</button>\r\n                </div>\r\n            </div>\r\n            <hr v-if=\"exportto\" >\r\n            <!--<button id=\"show-modal\" @click=\"showModal = true\">Show Modal</button> -->\r\n            <!-- use the modal component, pass in the prop -->\r\n\r\n\r\n            <modal  ref=\"myModal\" v-show=\"showModal\"  v-on:close=\"showModal = false\"  :modalcontainer=\"modalcontainersize\">\r\n\r\n                <component :key=\"formkey\" v-if=\"component\" ref=\"mm1\" :is=\"mm\"  v-on:close=\"showModal = false\" @saveMe_add=\"saveMe_add\" @saveMe_edit=\"saveMe_edit\" @inputchange=\"handleinputchange\" @formmounted=\"formmountevent\" @groupdatasubmit=\"handlegroupdatasubmit\"></component>\r\n\r\n        <!--<v-runtime-template v-if=\"component\" :template=\"compiledData.template\" v-on:close=\"showModal = false\" @saveMe=\"saveMe\"></v-runtime-template>\r\n        -->\r\n            </modal>\r\n\r\n            <!-- <div> <button class=\"btn btn-info\" type=\"button\" v-on:click=\"refreshData()\">Refresh</button></div> -->\r\n        </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport XLSX from 'xlsx';\r\nimport chevrondown from './chevrondown.vue'\r\nimport chevronright from './chevronright.vue'\r\nimport modal from './modal-cmp.vue'\r\nimport groupon from './groupon.vue'\r\n\r\nconst api_root=process.env.VUE_APP_API_ROOT===undefined?'':process.env.VUE_APP_API_ROOT\r\n \r\nexport default {\r\n  name: 'ktable',\r\n    //delimiters: ['[[', ']]'],\r\n    components:{chevrondown,chevronright,modal,groupon,'ktable':this},\r\n\r\n    props: {\r\n        modalcontainersize:{\r\n            type: String,\r\n            default: 'modal-container-md'\r\n        },\r\n        softbutton1:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        title_softbutton1:{\r\n            type: String,\r\n            default: ''\r\n        },\r\n        softbutton2:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        title_softbutton2:{\r\n            type: String,\r\n            default: ''\r\n        },\r\n        groupinginforequired:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        checkboxes:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        \r\n        summaryrow:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        exportto:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        tablesearchable:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        apiurl:{\r\n            type: String,\r\n            default: ''\r\n        },\r\n        displaytableparticulars:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        loadOnStart: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        useDetailRow:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        useActionButton:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n         useprintbutton:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        hideduplicatefields:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        tableexpandable:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        rowcolor:{\r\n            type: String,\r\n            default: 'lightgrey'\r\n        },\r\n        headervisible:{\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        sortable:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        hidedetailrowatindex:{\r\n            type: Number,\r\n            default: -1\r\n        },\r\n        useserialnos:{\r\n            type:  Boolean,\r\n            default: true\r\n        },\r\n        caption:{\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n\r\n    },\r\n    watch: {\r\n\r\n        hidedetailrowatindex: function (val) {\r\n            //console.log('watchmoddet')\r\n            this.modifydetailrowstyle(val);\r\n        },\r\n        tableparticulars: function (val) {\r\n            this.$emit('tableparticularschanged', val);\r\n        },\r\n\r\n    },\r\n    computed:{compiledData:function(){return {template:`<div>${this.modal_content}</div>`,mounted:function(){console.log('sddfff');this.$emit('formmounted');}}},\r\n        hasDetailRowSlot:function(){return !!this.$scopedSlots['detailrow'];},\r\n        buttoncomponent:function(){return {template:`<div>${this.click2}</div>`,mounted:eval(this.mounted),computed:{ktabl:function(){return this.$parent}},methods:{click1:function(){console.log(eval('this.ktabl.formFields'))},}}},\r\n        \r\n    },\r\n    data:function() {\r\n            return {\r\n                fields_group:[],\r\n                showdetailrow:this.useDetailRow,\r\n                groupcaption:\"Filter data\",\r\n                duplicatefieldshidden:this.hideduplicatefields,\r\n                grouptabledata:[],\r\n                groupdatashow:false,\r\n                groupdata:'',\r\n                visiblefields:0,\r\n                selectedrows:[],\r\n                mounted:'',\r\n                api_root:api_root,\r\n                tablerowcolor:[],\r\n                summary:{},\r\n                summaryinfo:{},\r\n                dataloaded:false,\r\n                datastatus:'',\r\n                searchfield:'',\r\n\r\n                mydetailrowdataready:true,\r\n                tableparticulars:{},\r\n                isActive:false,\r\n                //rowcolor:[],\r\n                align:{},\r\n                width:{},\r\n                p1:'',\r\n                index:0,\r\n                tableFields: [],\r\n                tableFields_verbose:[],\r\n                formFields:[],\r\n                tableData: [],\r\n                originaltableData:[],\r\n                originalformFields:[],\r\n                groupedtableData:[],\r\n                groupedformFields:[],\r\n                \r\n\r\n                my:12345,\r\n                console:console,\r\n                d:[],\r\n                fields:{},\r\n                apiurldetail:'',\r\n                contentdetailrow:'',\r\n                detailrowcomponent:[],\r\n                showModal:false,\r\n                modal_content:'<div></div>',\r\n                mm:null,\r\n                component:false,\r\n                hasTableData:false,\r\n                detailrowhascontent:[],\r\n                urlcreate:'',\r\n                \r\n                formkey:1,\r\n                currentindex:-1,\r\n                selectedRow:-1,\r\n                click2:'',\r\n                }},\r\n     created:  function(){\r\n         \r\n    },\r\n    mounted: async function () {\r\n\r\n    if (this.loadOnStart) {\r\n      this.loadData(this.apiurl)}\r\n        this.$emit('ktablemounted');\r\n        //axios.get(this.api_root+'/mi/test')\r\n          //      .then((response) => {\r\n                                //console.log(response);\r\n             //                   this.click2=response.data.template\r\n             //                   this.mounted=response.data.mounted\r\n             //                   console.log(this.mounted);\r\n             //       },function (error) {alert(error);}\r\n              //      );\r\n            \r\n        \r\n    },\r\n    destroyed:function() {\r\n    //console.log(`At this point, watchers, child components, and event listeners have been torn down.`)\r\n    //console.log(this)\r\n\r\n  },\r\n    methods: {\r\n        softbutton_clicked:function(index){\r\n            this.$emit(\"softbutton\"+index+\"_clicked\")\r\n        },\r\n        handlegroupdatasubmit:async function(){\r\n            console.log('liotrttt');\r\n            //var url=this.apiurl+ \"?group=\" + 'yes'+\"&fields=\"+JSON.stringify(this.$refs.mm1.selectedfields)+\"&function=\"+JSON.stringify(this.$refs.mm1.selectedfunction)+\"&filter=\"+JSON.stringify(this.$refs.mm1.selectedfilter)\r\n            //this.loadData(url)\r\n            await axios.get(this.apiurl+ \"?group=\" + 'yes'+\"&fields=\"+JSON.stringify(this.$refs.mm1.selectedfields)+\"&function=\"+JSON.stringify(this.$refs.mm1.selectedfunction)+\"&filter=\"+JSON.stringify(this.$refs.mm1.selectedfilter))\r\n                .then((response) => {\r\n                        console.log(response.data);\r\n                        //this.groupdatashow=true;\r\n                        this.duplicatefieldshidden=true;\r\n                        if (this.useDetailRow==true){this.showdetailrow=false}\r\n                        this.tableData=response.data.tableData;\r\n\r\n                        this.formFields=response.data.formFields\r\n                        this.fields_group=response.data.fields_group\r\n                        this.groupcaption='<< Go back';\r\n                },function (error) {console.log(error);}\r\n                )\r\n            this.showModal=false;\r\n            this.mm1=null;\r\n            \r\n            \r\n        },\r\n        filterdata:function(){\r\n            if (this.groupcaption=='Filter data'){\r\n            this.mm=groupon;\r\n            this.component=true;\r\n            this.showModal=true;\r\n            }\r\n            if (this.groupcaption=='<< Go back'){\r\n            //this.mm=groupon;\r\n            //this.component=true;\r\n            //this.showModal=true;\r\n            this.duplicatefieldshidden=false;\r\n            this.showdetailrow=this.useDetailRow;\r\n            this.formFields=this.originalformFields;\r\n            this.tableData=this.originaltableData;\r\n            this.groupcaption='Filter data'}\r\n\r\n        },\r\n        geturledit:function(item){\r\n            return 'urledit' in item?item.urledit:'';\r\n                    \r\n        },\r\n        geturldelete:function(item){\r\n            return 'urldel' in item?item.urldel:''; \r\n        },\r\n        geturlprint:function(item){\r\n            return 'urlprint' in item?item.urlprint:'';         \r\n        },\r\n        countvisiblefields:function(){\r\n            this.visiblefields+=1;\r\n            console.log(this.visiblefields);\r\n            \r\n        },\r\n        selectall:function(e){\r\n            if (e.target.checked){\r\n                var n=0;\r\n                this.selectedrows=[];\r\n                for  ( var item in this.tableData){\r\n                    console.log(item[0])\r\n                        this.selectedrows.push(n)\r\n                        n=n+1\r\n                      //console.log(this.selectedrows)  \r\n                }\r\n            }else{\r\n                this.selectedrows=[]\r\n                //console.log(this.selectedrows)\r\n            }\r\n            //console.log(this.selectedrows)\r\n        },\r\n        rowselected:function(e,itemindex){\r\n                if (e.target.checked){\r\n                this.selectedrows.push(itemindex);\r\n                }else{\r\n                    const i=this.selectedrows.indexOf(itemindex);\r\n                    if(i>-1){\r\n                        this.selectedrows.splice(i,1);\r\n                        //console.log(this.selectedrows);\r\n                    }\r\n                }\r\n                //console.log(this.tableData[itemindex])\r\n        },\r\n        click1:function(){console.log(9)},\r\n        ExportData:function()\r\n                    {\r\n                  \r\n                  //var data=this.tableData;\r\n                  var fields=this.formFields;\r\n                  var newdata=[];\r\n                  for(var x of this.tableData){\r\n                      var newObj=Object.assign({},x);\r\n                      Object.keys(newObj).forEach(function(key){if(!fields.includes(key))delete newObj[key];});\r\n                      newdata.push(newObj);\r\n\r\n                  }\r\n\r\n                var ws = XLSX.utils.json_to_sheet(newdata);\r\n                var wb = XLSX.utils.book_new();\r\n                 XLSX.utils.book_append_sheet(wb, ws, \"data\");\r\n                XLSX.writeFile(wb, \"sheet1.xlsx\");\r\n                },\r\n\r\n        rows:function(field){\r\n            console.log(field)\r\n            console.log(this.tableparticulars[field].length)\r\n            if (String(this.tableparticulars[field]).length>50){\r\n                return '3'\r\n            }else if(String(this.tableparticulars[field]).length>20){\r\n                 return '2'\r\n            }else{\r\n                return '1'\r\n            }\r\n        },\r\n\r\n        searchtext:function(e){\r\n            //console.log(e.target.value);\r\n            var filter=e.target.value.toLowerCase();\r\n\r\n                //console.log(this.searchfield)\r\n\r\n            if (this.searchfield.length>=1){\r\n                    this.tableData = this.originaltableData.filter(word => word[this.searchfield].toLowerCase().search(filter)!= -1);\r\n            }\r\n\r\n        },\r\n        rowitemclicked:function(item,itemindex,e){\r\n            console.log(e);\r\n            if (this.selectedRow==itemindex){\r\n                this.selectedRow=-1\r\n            }else\r\n            this.selectedRow=itemindex;\r\n            this.$emit('rowselected',item,itemindex)\r\n        },\r\n        formmountevent:function(){\r\n            console.log('form mounted');\r\n            this.$emit('formmounted');\r\n        },\r\n        handleinputchange:function(e){this.$emit(\"forminputchange\",e)},\r\n        modifydetailrowstyle:function(v){this.d[v]='none';},\r\n        calcPos:function(){\r\n                //var abc= this.$refs.myModal.$children[0].$refs.abc;\r\n                //console.log(abc);\r\n                return {\"background\":\"red\"};\r\n                },\r\n        loadData: async function (url) {\r\n                await axios.get(url)\r\n                .then((response) => {\r\n                this.hasTableData = (response.data.success == 'true') ? true : false;\r\n\r\n                //this.$emit('tablehasdata', this.hasTableData);\r\n\r\n                \r\n                //console.log(this.hasTableData);\r\n\r\n                    if(response.data.success=='true'){\r\n                    this.tableFields = response.data.tableFields;\r\n                    this.tableData=response.data.tableData;\r\n                    console.log(this.tableData)\r\n                    this.originaltableData=response.data.tableData;\r\n                    \r\n\r\n                    this.tableFields_verbose=response.data.tableFields_verbose;\r\n                    this.formFields=response.data.formFields;\r\n                    this.originalformFields=response.data.formFields;\r\n                    //console.log(this.formFields);\r\n                    //eslint-disable-next-line\r\n                    this.urlcreate=response.data.hasOwnProperty('urls')?(response.data.urls.hasOwnProperty('urlcreate')?response.data.urls.urlcreate:''):'';\r\n                    \r\n                    this.tableparticulars=response.data.tableparticulars;\r\n                    //console.log(this.tableparticulars);\r\n                    this.DetailRowStyle();\r\n                    //this.defaultrowcolor();\r\n                     var tableFields_align=!('tableFields_align' in response.data)?{}:response.data.tableFields_align;\r\n                     this.width=!('tableFields_width' in response.data)?{}:response.data.tableFields_width;\r\n                    console.log(this.width);\r\n                     this.summary=!('tableFields_summary' in response.data)?{}:response.data.tableFields_summary;\r\n                     this.summaryinfo=!('tableFields_summaryinfo' in response.data)?{}:response.data.tableFields_summaryinfo;\r\n                    //console.log(this.summary);\r\n                        //console.log(Object.keys(tableFields_align).length == 0);\r\n                    var item=this.tableData[0]\r\n\r\n                        for (var field of this.formFields) {\r\n                            var type = typeof item[field];\r\n                            if (type == 'string') {\r\n                                if (Object.keys(tableFields_align).length >0) {\r\n                                    this.align[field] = tableFields_align[field]\r\n                                } else {\r\n                                    this.align[field] = 'center';\r\n                                }\r\n                            }\r\n                            \r\n                            if (type == 'number') {\r\n                                if (Object.keys(tableFields_align).length >0) {\r\n                                    this.align[field] = tableFields_align[field]\r\n                                } else {\r\n                                    this.align[field] = 'center';\r\n                                }\r\n                            }\r\n                            \r\n                            if (type == 'boolean') {\r\n                                if (Object.keys(tableFields_align).length >0) {\r\n                                    this.align[field] = tableFields_align[field]\r\n                                } else {\r\n                                    this.align[field] = 'center';\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                    //console.log(this.align);\r\n                    this.$emit('dataloaded');\r\n                    this.dataloaded=true;\r\n\r\n                    }},function (error) {console.log(error);}\r\n                    )\r\n        },\r\n\r\n        renderNormalField:function(field, item){\r\n                            //console.log(itemindex);\r\n                            if(typeof item[field]=='boolean'){\r\n\r\n                                return \"<input type='checkbox' \" +(item[field]?'checked':'') +\" style='pointer-events: none;' >\";\r\n                            }\r\n                            else{\r\n\r\n                                return item[field];\r\n                            }\r\n\r\n        },\r\n        ifprevioussame:function(field, item,itemindex){\r\n            \r\n            \r\n                        if(itemindex>0){\r\n                                //console.log(this.groupFields);\r\n                                if(this.tableData[itemindex-1][field]==this.tableData[itemindex][field]){\r\n                                    return true;\r\n                                }else{\r\n                                return false;}\r\n                                }\r\n                             else{\r\n                            return false\r\n                             }\r\n        },\r\n        renderTitle:function(field){return \"<a href='javascript:void(0);'>\"+this.tableFields_verbose[field]+\"</a>\"+ (this.sortable?\"<span><i class='fas fa-sort'></i></span>\":\"\");},\r\n        refreshData:function(){this.loadData(this.apiurl)},\r\n        countVisibleFields:function(){return this.formFields.length;},\r\n        onRowClicked:function(item,index){\r\n            //console.log(e);\r\n            //console.log('detial select')\r\n            this.$emit('rowclicked',item,index);\r\n            this.isActive=!this.isActive;\r\n            //console.log(this.currentindex)\r\n            //console.log(index)\r\n            if (this.currentindex===-1){\r\n                this.d.splice(index,1,'');\r\n            } else if(this.currentindex===index)\r\n                {\r\n                //console.log('ccindex1');\r\n                if (this.d[index]==='none'){\r\n                this.d.splice(this.currentindex,1,'')}else{this.d.splice(this.currentindex,1,'none');}\r\n            }else{\r\n               // console.log('ccindex2');\r\n                this.d.splice(this.currentindex,1,'none');\r\n                 this.d.splice(index,1,'');\r\n            }\r\n            this.currentindex=index;\r\n\r\n\r\n            },\r\n        onRowClicked1:function(item,index){\r\n            //console.log(e);\r\n            this.isActive=!this.isActive;\r\n            //console.log(this.isActive);\r\n            this.$emit('rowclicked',item,index);\r\n            //console.log(this.$scopedSlots);\r\n            if (this.d[index]==''){\r\n                this.d.splice(index,1,'none');\r\n            //this.detailrowcomponent.splice(index,1,'');\r\n                        }\r\n            else{\r\n                for(var i=0;i<this.tableData.length;i++){this.d[i]==''?this.d.splice(i,1,'none'):'';\r\n                    //this.detailrowcomponent.splice(i,1,'');\r\n                }\r\n                //console.log(this.d);\r\n                this.d.splice(index,1,'');\r\n\r\n\r\n                //this.apiurldetail='http://192.100.200.23:8033/epfo/ajax/epfloanview/';\r\n                //this.detailrowcomponent.splice(index,1,ktable);\r\n                }\r\n\r\n            },\r\n        DetailRowStyle:function(){for(var i=0;i<this.tableData.length;i++){this.tableexpandable?this.d.push(''):this.d.push('none');}},\r\n        defaultrowcolor:function(){for(var i=0;i<this.tableData.length;i++){this.tablerowcolor.push(this.rowcolor?this.rowcolor:'lightgrey');}},\r\n        modifyrowcolor:function(index,color){this.tablerowcolor.splice(index,1,color);},\r\n        editItem:function(item,index,e){\r\n            console.log(e);\r\n            this.$emit('edit_clicked');\r\n\r\n            this.modal_content='';\r\n            //console.log(this.compiledData);\r\n            this.formkey+=1;\r\n            this.component=false;\r\n                    for (var f in item){this.fields[f]=item[f]}\r\n\r\n                //axios.get(\"{%  url 'epfloanedit' 0 %}\".slice(0,-1)+item.id)\r\n                axios.get(item.urledit)\r\n                .then((response) => {\r\n                                //console.log(response);\r\n                                this.modal_content = response.data.html_form;\r\n                                this.mm=this.compiledData;\r\n                                this.component=true;\r\n                                this.showModal=true;\r\n\r\n                    },function (error) {alert(error);}\r\n                    );\r\n                    //this.component=true;\r\n                    //this.showModal=true;\r\n        },\r\n        printItem:function(item,index,e){\r\n            console.log(index)\r\n            console.log(e)\r\n            window.location.href=item.urlprint\r\n        },\r\n\r\n        addItem:function(){\r\n            this.$emit('add_clicked');\r\n            this.modal_content='';\r\n            this.formkey+=1;\r\n            this.fields={};\r\n                    //axios.get(\"{%  url 'epfloancreate' %}\")\r\n                axios.get(this.urlcreate)\r\n                .then((response) => {\r\n                    //console.log(response);\r\n                    this.modal_content = response.data.html_form;\r\n                    this.mm=this.compiledData;\r\n                    this.component=true;\r\n                    this.showModal=true;\r\n                    },function (error) {alert(error);}\r\n                    );\r\n                    //this.component=true;\r\n                    //this.showModal=true;\r\n        },\r\n        saveMe_add:function(){\r\n                //save logic\r\n            //console.log('insude save me add');\r\n                var action=this.$refs.mm1.$refs['myform'].action;\r\n                    //const formData=new FormData(this.$refs.mm1.$refs['myform']);\r\n                    //const data={};\r\n                    //console.log(action)\r\n                    var formdata=new FormData(document.getElementById('__form'));\r\n                    //formdata.append('addedit','add');\r\n                    //console.log(document.getElementById('__form'));\r\n                    formdata.forEach((key,value)=> console.log(value,key));\r\n                    var csrftoken=document.querySelector('[name=\"csrfmiddlewaretoken\"]').value;\r\n                    var rdata=this.fields;\r\n                    rdata['addedit']='add';\r\n\r\n                    //console.log(action);\r\n                    axios({method:'post',url:action, data:formdata,\r\n                        headers: {\r\n                            \"X-CSRFToken\": csrftoken,\r\n                            'content-type': 'application/x-www-form-urlencoded'\r\n                            \r\n                        }\r\n\r\n                        }).then(response=>{\r\n                            //console.log(response.data);\r\n                        this.modal_content = response.data.html_form;\r\n                            this.mm='';\r\n                            this.mm=this.compiledData;\r\n\r\n                            //console.log(response.data.success);\r\n                            if (response.data.success=='True'){\r\n                                    this.refreshData();\r\n                                    this.$emit('datachanged');\r\n                                    this.component=false;\r\n                                    this.showModal=false;\r\n                                        }\r\n                        })\r\n                                .catch(response=>{console.log(response);});\r\n\r\n              },\r\n        saveMe_edit:function(){\r\n                    var action=this.$refs.mm1.$refs['myform'].action;\r\n                    console.log('save me edit');\r\n                    console.log(action);\r\n                    var formdata=new FormData(document.getElementById('__form'));\r\n                    var csrftoken=document.querySelector('[name=\"csrfmiddlewaretoken\"]').value;\r\n                     axios({method:'post',url:action, data:formdata,\r\n                        headers: {\r\n                            \"X-CSRFToken\": csrftoken,\r\n                            'content-type': 'application/x-www-form-urlencoded'\r\n                        }\r\n\r\n                        }).then(response=>{\r\n                            //console.log(response);\r\n\r\n                            this.modal_content = response.data.html_form;\r\n                            this.mm='';\r\n                            this.mm=this.compiledData;\r\n                            //console.log(response.data.success);\r\n                            if (response.data.success=='True'){\r\n                                    this.refreshData();\r\n                                    this.$emit('datachanged');\r\n                                    this.component=false;\r\n                                    this.showModal=false;\r\n                                        }\r\n                                })\r\n                                .catch(response=>{console.log(response);});\r\n        },\r\n        delItem:function(item,index,e){\r\n            console.log(e);\r\n            if (confirm('Are you sure you want to delete this item ?')) {\r\n\r\n\r\n                    //console.log(item);\r\n                    //url=\"{%  url 'epfloandel' 0 %}\".slice(0,-1)+item.id\r\n                    var url=item.urldel;\r\n                    axios({method:'get',url:url,\r\n\r\n                        }).then(response=>{\r\n                            if (response.data.success=='True'){\r\n                                    this.refreshData();\r\n                                        }\r\n                                })\r\n                                .catch(response=>{console.log(response);});\r\n            }\r\n        },\r\n        onColumnHeaderClicked1:function(field, e){\r\n            console.log(e);\r\n            //var url=\"\";\r\n            //if (this.sortable) {\r\n               // if ((this.apiurl).indexOf(\"?\")==-1){\r\n                 //    url=this.apiurl + \"?field=\" + field;}\r\n                //else{ url=this.apiurl + \"&field=\" + field;}\r\n\r\n                //this.apiurl=url;\r\n                //this.loadData();\r\n                //axios.get(url)\r\n                  //  .then((response) => {this.tableFields = response.data.tableFields;\r\n                //this.tableData = response.data.tableData;\r\n               // this.DetailRowStyle();\r\n\r\n            //},\r\n\r\n               // function (error) {\r\n              //      console.log(error);\r\n              //  }\r\n          //  )\r\n\r\n            //}\r\n        },\r\n        onColumnHeaderClicked:function(field, e){\r\n            console.log(e);\r\n            if (this.sortable) {\r\n                this.d.splice(this.currentindex,1,'none');\r\n                this.tableData.sort((a,b) => (a['sortkey_'+field] > b['sortkey_'+field]) ? 1 : ((b['sortkey_'+field] > a['sortkey_'+field]) ? -1 : 0));\r\n\r\n            }\r\n        },\r\n         spanSize: function(values, valueIndex, fieldIndex) {\r\n              // If left value === current value\r\n              // and top value === 0 (= still in the same top bracket)\r\n              // The left td will take care of the display\r\n              if (valueIndex > 0 &&\r\n                values[valueIndex - 1][fieldIndex] === values[valueIndex][fieldIndex] &&\r\n                (fieldIndex === 0 || (this.spanSize(values, valueIndex, fieldIndex - 1) === 0))) {\r\n                return 0;\r\n              }\r\n              // Otherwise, count entries on the right with the same value\r\n              // But stop if the top value !== 0 (= the top bracket has changed)\r\n              let size = 1;\r\n              let i = valueIndex;\r\n              while (i + 1 < values.length &&\r\n                values[i + 1][fieldIndex] === values[i][fieldIndex] &&\r\n                (fieldIndex === 0 || (i + 1 < values.length && this.spanSize(values, i + 1, fieldIndex - 1) === 0))) {\r\n                i++;\r\n                size++;\r\n              }\r\n              return size;\r\n            },\r\n    },\r\n\r\n    }\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n    t:hover{\r\n        background:red;\r\n    }\r\n    .ktable-expand{\r\n         background-color:darkgray;\r\n        width:30px;\r\n    }\r\n    .ktable-expand:hover{\r\n        background-color:#ff0000\r\n\r\n    }\r\n    \r\n    .activeG{\r\n        background-color:#ff0000\r\n    }\r\n    .detailrow .tddetailrow:empty{\r\n        display:none;\r\n\r\n    }\r\n    #detailrow{\r\n        padding-left: 40px;\r\n    }\r\n    .table tbody tr td.highlight {\r\n  background-color: #117a8b;\r\n}\r\n[v-cloak]{\r\n    display:none;\r\n}\r\n\r\n\r\n\r\n</style>\r\n\r\n"]}]}