{"remainingRequest":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\src\\components\\home.vue?vue&type=template&id=957c9522&","dependencies":[{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\src\\components\\home.vue","mtime":1637405940000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\githubRepositories\\djangovue\\mtpinfoshare\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}